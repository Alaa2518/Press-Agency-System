@model WebApplication3.Models.ViewModels.PersonRoleViewModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_WallLayout.cshtml";
}

<h2>Register</h2>


@using (Html.BeginForm("Register", "Wall",null, FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    
    @Html.ValidationSummary(true, "", new { @class = "text-danger " })

<div class="form-group">
    @Html.LabelFor(model => model.Person.Image, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        <img src="" class="img-thumbnail"id="photo" alt="" style="width:250px;height:250px;">
        <input id="file" name="file" type="file" class="text-danger btn btn-default" onchange="loadFile(event)"/>
    </div>
  </div>

    <div class="form-group">

        @Html.LabelFor(model => model.Person.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">

            @Html.EditorFor(model => model.Person.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Person.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Person.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Person.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Person.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Person.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Person.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Person.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Person.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Person.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Person.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Person.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Person.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Person.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(Model => Model.Person.RoleUserID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(Model => Model.Person.RoleUserID, new SelectList(Model.userRoles, "Id", "UserType"), "Select userRoles", new { @class = "form-control" })
            @Html.ValidationMessageFor(Model => Model.Person.RoleUserID)
        </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Person.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Person.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Person.Password, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
   
    var loadFile = function (event) {
        var image = document.getElementById('photo');
        image.src = URL.createObjectURL(event.target.files[0]);
    };
    
</script>
